// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        (unknown)
// source: recordsales.proto

package recordsales

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Sale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId      int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	LastUpdateTime  int64 `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	Price           int32 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	OnHold          bool  `protobuf:"varint,4,opt,name=on_hold,json=onHold,proto3" json:"on_hold,omitempty"`
	NextProcessTime int64 `protobuf:"varint,5,opt,name=next_process_time,json=nextProcessTime,proto3" json:"next_process_time,omitempty"`
}

func (x *Sale) Reset() {
	*x = Sale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordsales_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sale) ProtoMessage() {}

func (x *Sale) ProtoReflect() protoreflect.Message {
	mi := &file_recordsales_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sale.ProtoReflect.Descriptor instead.
func (*Sale) Descriptor() ([]byte, []int) {
	return file_recordsales_proto_rawDescGZIP(), []int{0}
}

func (x *Sale) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Sale) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *Sale) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Sale) GetOnHold() bool {
	if x != nil {
		return x.OnHold
	}
	return false
}

func (x *Sale) GetNextProcessTime() int64 {
	if x != nil {
		return x.NextProcessTime
	}
	return 0
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sales       []*Sale `protobuf:"bytes,1,rep,name=sales,proto3" json:"sales,omitempty"`
	Archives    []*Sale `protobuf:"bytes,2,rep,name=archives,proto3" json:"archives,omitempty"`
	LastSaleRun int64   `protobuf:"varint,3,opt,name=last_sale_run,json=lastSaleRun,proto3" json:"last_sale_run,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordsales_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_recordsales_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_recordsales_proto_rawDescGZIP(), []int{1}
}

func (x *Config) GetSales() []*Sale {
	if x != nil {
		return x.Sales
	}
	return nil
}

func (x *Config) GetArchives() []*Sale {
	if x != nil {
		return x.Archives
	}
	return nil
}

func (x *Config) GetLastSaleRun() int64 {
	if x != nil {
		return x.LastSaleRun
	}
	return 0
}

type GetStaleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStaleRequest) Reset() {
	*x = GetStaleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordsales_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaleRequest) ProtoMessage() {}

func (x *GetStaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordsales_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaleRequest.ProtoReflect.Descriptor instead.
func (*GetStaleRequest) Descriptor() ([]byte, []int) {
	return file_recordsales_proto_rawDescGZIP(), []int{2}
}

type GetStaleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaleSales []*Sale `protobuf:"bytes,1,rep,name=stale_sales,json=staleSales,proto3" json:"stale_sales,omitempty"`
}

func (x *GetStaleResponse) Reset() {
	*x = GetStaleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordsales_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaleResponse) ProtoMessage() {}

func (x *GetStaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordsales_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaleResponse.ProtoReflect.Descriptor instead.
func (*GetStaleResponse) Descriptor() ([]byte, []int) {
	return file_recordsales_proto_rawDescGZIP(), []int{3}
}

func (x *GetStaleResponse) GetStaleSales() []*Sale {
	if x != nil {
		return x.StaleSales
	}
	return nil
}

type GetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *GetStateRequest) Reset() {
	*x = GetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordsales_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateRequest) ProtoMessage() {}

func (x *GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordsales_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateRequest.ProtoReflect.Descriptor instead.
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return file_recordsales_proto_rawDescGZIP(), []int{4}
}

func (x *GetStateRequest) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type GetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sales []*Sale `protobuf:"bytes,1,rep,name=sales,proto3" json:"sales,omitempty"`
}

func (x *GetStateResponse) Reset() {
	*x = GetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordsales_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateResponse) ProtoMessage() {}

func (x *GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordsales_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateResponse.ProtoReflect.Descriptor instead.
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return file_recordsales_proto_rawDescGZIP(), []int{5}
}

func (x *GetStateResponse) GetSales() []*Sale {
	if x != nil {
		return x.Sales
	}
	return nil
}

var File_recordsales_proto protoreflect.FileDescriptor

var file_recordsales_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6e,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x48,
	0x6f, 0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x84, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f,
	0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x32, 0xa7, 0x01, 0x0a, 0x0b, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x12, 0x1c,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordsales_proto_rawDescOnce sync.Once
	file_recordsales_proto_rawDescData = file_recordsales_proto_rawDesc
)

func file_recordsales_proto_rawDescGZIP() []byte {
	file_recordsales_proto_rawDescOnce.Do(func() {
		file_recordsales_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordsales_proto_rawDescData)
	})
	return file_recordsales_proto_rawDescData
}

var file_recordsales_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_recordsales_proto_goTypes = []interface{}{
	(*Sale)(nil),             // 0: recordsales.Sale
	(*Config)(nil),           // 1: recordsales.Config
	(*GetStaleRequest)(nil),  // 2: recordsales.GetStaleRequest
	(*GetStaleResponse)(nil), // 3: recordsales.GetStaleResponse
	(*GetStateRequest)(nil),  // 4: recordsales.GetStateRequest
	(*GetStateResponse)(nil), // 5: recordsales.GetStateResponse
}
var file_recordsales_proto_depIdxs = []int32{
	0, // 0: recordsales.Config.sales:type_name -> recordsales.Sale
	0, // 1: recordsales.Config.archives:type_name -> recordsales.Sale
	0, // 2: recordsales.GetStaleResponse.stale_sales:type_name -> recordsales.Sale
	0, // 3: recordsales.GetStateResponse.sales:type_name -> recordsales.Sale
	2, // 4: recordsales.SaleService.GetStale:input_type -> recordsales.GetStaleRequest
	4, // 5: recordsales.SaleService.GetSaleState:input_type -> recordsales.GetStateRequest
	3, // 6: recordsales.SaleService.GetStale:output_type -> recordsales.GetStaleResponse
	5, // 7: recordsales.SaleService.GetSaleState:output_type -> recordsales.GetStateResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_recordsales_proto_init() }
func file_recordsales_proto_init() {
	if File_recordsales_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recordsales_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordsales_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordsales_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordsales_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordsales_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordsales_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordsales_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recordsales_proto_goTypes,
		DependencyIndexes: file_recordsales_proto_depIdxs,
		MessageInfos:      file_recordsales_proto_msgTypes,
	}.Build()
	File_recordsales_proto = out.File
	file_recordsales_proto_rawDesc = nil
	file_recordsales_proto_goTypes = nil
	file_recordsales_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SaleServiceClient is the client API for SaleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SaleServiceClient interface {
	GetStale(ctx context.Context, in *GetStaleRequest, opts ...grpc.CallOption) (*GetStaleResponse, error)
	GetSaleState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error)
}

type saleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSaleServiceClient(cc grpc.ClientConnInterface) SaleServiceClient {
	return &saleServiceClient{cc}
}

func (c *saleServiceClient) GetStale(ctx context.Context, in *GetStaleRequest, opts ...grpc.CallOption) (*GetStaleResponse, error) {
	out := new(GetStaleResponse)
	err := c.cc.Invoke(ctx, "/recordsales.SaleService/GetStale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saleServiceClient) GetSaleState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error) {
	out := new(GetStateResponse)
	err := c.cc.Invoke(ctx, "/recordsales.SaleService/GetSaleState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SaleServiceServer is the server API for SaleService service.
type SaleServiceServer interface {
	GetStale(context.Context, *GetStaleRequest) (*GetStaleResponse, error)
	GetSaleState(context.Context, *GetStateRequest) (*GetStateResponse, error)
}

// UnimplementedSaleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSaleServiceServer struct {
}

func (*UnimplementedSaleServiceServer) GetStale(context.Context, *GetStaleRequest) (*GetStaleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStale not implemented")
}
func (*UnimplementedSaleServiceServer) GetSaleState(context.Context, *GetStateRequest) (*GetStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSaleState not implemented")
}

func RegisterSaleServiceServer(s *grpc.Server, srv SaleServiceServer) {
	s.RegisterService(&_SaleService_serviceDesc, srv)
}

func _SaleService_GetStale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaleServiceServer).GetStale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordsales.SaleService/GetStale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaleServiceServer).GetStale(ctx, req.(*GetStaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaleService_GetSaleState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaleServiceServer).GetSaleState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordsales.SaleService/GetSaleState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaleServiceServer).GetSaleState(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SaleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recordsales.SaleService",
	HandlerType: (*SaleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStale",
			Handler:    _SaleService_GetStale_Handler,
		},
		{
			MethodName: "GetSaleState",
			Handler:    _SaleService_GetSaleState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recordsales.proto",
}
