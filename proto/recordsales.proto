syntax = "proto3";

package recordsales;

option go_package = "github.com/brotherlogic/recordsales/proto";

message Sale {
  int32 instance_id = 1;
  int64 last_update_time = 2;
  int32 price = 3;
  bool on_hold = 4;
  int64 next_process_time = 5;
}

message Prices {
  repeated PriceHistory history = 1;
}

message PriceHistory {
  int64 date = 1;
  float price = 2;
}

message Config {
  repeated Sale sales = 1;
  repeated Sale archives = 2;
  int64 last_sale_run = 3;
  map<int32, Prices> price_history = 4;
}

message GetStaleRequest {}

message GetStaleResponse {
  repeated Sale stale_sales = 1;
}

message GetStateRequest {
  int32 instance_id = 1;
}

message GetStateResponse {
  repeated Sale sales = 1;
}

message UpdatePriceRequest {
  int32 id = 1;
}

message UpdatePriceResponse {}

message GetPriceRequest {
  int32 id = 1;
}

message GetPriceResponse {
  Prices prices = 1;
}

service SaleService {
  rpc GetStale(GetStaleRequest) returns (GetStaleResponse) {};
  rpc GetSaleState(GetStateRequest) returns (GetStateResponse) {};
  rpc UpdatePrice(UpdatePriceRequest) returns (UpdatePriceResponse) {};
  rpc GetPrice(GetPriceRequest) returns (GetPriceResponse) {};
}
